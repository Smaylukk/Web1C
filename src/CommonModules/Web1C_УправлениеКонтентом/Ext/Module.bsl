
////////////////////////////////////////////////////////////////////////////////
//      Изображения   Стили   Скрипты   Файлы
////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьНастройкиЭкспортаОбъекта(ВидОбъекта) Экспорт 
	Результат = Новый Структура("СетевойКаталог, ПолныйСетевойПуть, ЧастичныйСетевойПуть", "", "", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.HtmlОбъект КАК HtmlОбъект,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.СетевойКаталог КАК СетевойКаталог,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.ПолныйСетевойПуть КАК ПолныйСетевойПуть,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.ЧастичныйСетевойПуть КАК ЧастичныйСетевойПуть
	|ИЗ
	|	РегистрСведений.Web1C_НастройкиЭкспортаHtmlОбъектов КАК Web1C_НастройкиЭкспортаHtmlОбъектов
	|ГДЕ
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.HtmlОбъект = &ВидОбъекта";
	Запрос.УстановитьПараметр("ВидОбъекта", ВидОбъекта);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить("СетевойКаталог", Выборка.СетевойКаталог);
		Результат.Вставить("ПолныйСетевойПуть", Выборка.ПолныйСетевойПуть);
		Результат.Вставить("ЧастичныйСетевойПуть", Выборка.ЧастичныйСетевойПуть);
	КонецЦикла; 
	
	
	Возврат Результат;
КонецФункции

Функция ПолучитьВсеНастройкиЭкспортаОбъектов() Экспорт  
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.HtmlОбъект КАК HtmlОбъект,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.СетевойКаталог КАК СетевойКаталог,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.ПолныйСетевойПуть КАК ПолныйСетевойПуть,
	|	Web1C_НастройкиЭкспортаHtmlОбъектов.ЧастичныйСетевойПуть КАК ЧастичныйСетевойПуть
	|ИЗ
	|	РегистрСведений.Web1C_НастройкиЭкспортаHtmlОбъектов КАК Web1C_НастройкиЭкспортаHtmlОбъектов";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураЭкспорта = Новый Структура("СетевойКаталог, ПолныйСетевойПуть, ЧастичныйСетевойПуть", "", "", "");
		СтруктураЭкспорта.Вставить("СетевойКаталог", Выборка.СетевойКаталог);
		СтруктураЭкспорта.Вставить("ПолныйСетевойПуть", Выборка.ПолныйСетевойПуть);
		СтруктураЭкспорта.Вставить("ЧастичныйСетевойПуть", Выборка.ЧастичныйСетевойПуть);
		
		Результат.Вставить(Выборка.HtmlОбъект, СтруктураЭкспорта);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции


Функция УстановитьОтметкуОВыгрузке(СсылкаНаОбъект) Экспорт 
	Результат = Ложь;
	
	Попытка
		Объект = СсылкаНаОбъект.ПолучитьОбъект();
		Объект.ДополнительныеСвойства.Вставить("Экспорт");
		Объект.ВыгруженВСетевуюПапку = Истина;
		Объект.Записать();
		
		Результат = Истина;
	Исключение
	    Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьМассивИзображений(ТолькоНеВыгруженные = Ложь, МассивСсылок = Неопределено) Экспорт 
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Изображения.Ссылка КАК Ссылка,
	|	Изображения.Наименование КАК Наименование,
	|	Изображения.Изображение КАК Изображение
	|ИЗ
	|	Справочник.Web1C_Ресурсы КАК Изображения
	|ГДЕ
	|	Изображения.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &ТолькоНеВыгруженные
	|				ТОГДА Изображения.ВыгруженВСетевуюПапку = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтборПоСсылкам
	|				ТОГДА Изображения.Ссылка В (&МассивСсылок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("ТолькоНеВыгруженные", ТолькоНеВыгруженные);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ОтборПоСсылкам", (МассивСсылок <> Неопределено));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	УИД = Новый УникальныйИдентификатор();
	Пока Выборка.Следующий() Цикл
		Адрес = ПоместитьВоВременноеХранилище(Выборка.Изображение.Получить(), УИД);
		Данные = Новый Структура;
		Данные.Вставить("Ссылка", Выборка.Ссылка);
		Данные.Вставить("ИмяФайла", Выборка.Наименование);
		Данные.Вставить("Адрес", Адрес);
		
		Результат.Добавить(Данные);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции

Функция ПолучитьМассивСтилей(ТолькоНеВыгруженные = Ложь, МассивСсылок = Неопределено) Экспорт 
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Стили.Ссылка КАК Ссылка,
	|	Стили.Наименование КАК Наименование,
	|	Стили.Текст КАК Текст
	|ИЗ
	|	Справочник.Стили КАК Стили
	|ГДЕ
	|	Стили.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &ТолькоНеВыгруженные
	|				ТОГДА Стили.ВыгруженВСетевуюПапку = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтборПоСсылкам
	|				ТОГДА Стили.Ссылка В (&МассивСсылок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И Стили.ВнешнийФайл = 0";
	Запрос.УстановитьПараметр("ТолькоНеВыгруженные", ТолькоНеВыгруженные);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ОтборПоСсылкам", (МассивСсылок <> Неопределено));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить("Ссылка", Выборка.Ссылка);
		Данные.Вставить("ИмяФайла", Выборка.Наименование);
		Данные.Вставить("Текст", Выборка.Текст);
		
		Результат.Добавить(Данные);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции

Функция ПолучитьМассивСкриптов(ТолькоНеВыгруженные = Ложь, МассивСсылок = Неопределено) Экспорт 
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Скрипты.Ссылка КАК Ссылка,
	|	Скрипты.Наименование КАК Наименование,
	|	Скрипты.Текст КАК Текст
	|ИЗ
	|	Справочник.Скрипты КАК Скрипты
	|ГДЕ
	|	Скрипты.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &ТолькоНеВыгруженные
	|				ТОГДА Скрипты.ВыгруженВСетевуюПапку = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтборПоСсылкам
	|				ТОГДА Скрипты.Ссылка В (&МассивСсылок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И Скрипты.ВнешнийФайл = 0";
	Запрос.УстановитьПараметр("ТолькоНеВыгруженные", ТолькоНеВыгруженные);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ОтборПоСсылкам", (МассивСсылок <> Неопределено));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить("Ссылка", Выборка.Ссылка);
		Данные.Вставить("ИмяФайла", Выборка.Наименование);
		Данные.Вставить("Текст", Выборка.Текст);
		
		Результат.Добавить(Данные);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции

Функция ПолучитьМассивФайлов(ТолькоНеВыгруженные = Ложь, МассивСсылок = Неопределено) Экспорт 
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФайлыHTTP.Ссылка КАК Ссылка,
	|	ФайлыHTTP.Наименование КАК Наименование,
	|	ФайлыHTTP.Текст КАК Текст,
	|	ФайлыHTTP.ТекстовыйФайл КАК ТекстовыйФайл,
	|	ФайлыHTTP.Файл КАК Файл
	|ИЗ
	|	Справочник.ФайлыHTTP КАК ФайлыHTTP
	|ГДЕ
	|	ФайлыHTTP.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &ТолькоНеВыгруженные
	|				ТОГДА ФайлыHTTP.ВыгруженВСетевуюПапку = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтборПоСсылкам
	|				ТОГДА ФайлыHTTP.Ссылка В (&МассивСсылок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("ТолькоНеВыгруженные", ТолькоНеВыгруженные);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ОтборПоСсылкам", (МассивСсылок <> Неопределено));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	УИД = Новый УникальныйИдентификатор();
	Пока Выборка.Следующий() Цикл
		Адрес = ПоместитьВоВременноеХранилище(Выборка.Файл.Получить(), УИД);
		Данные = Новый Структура;
		Данные.Вставить("Ссылка", Выборка.Ссылка);
		Данные.Вставить("ИмяФайла", Выборка.Наименование);
		Данные.Вставить("ТекстовыйФайл", Выборка.ТекстовыйФайл);
		Данные.Вставить("Текст", Выборка.Текст);
		Данные.Вставить("Адрес", Адрес);
		
		Результат.Добавить(Данные);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции



Функция ПолучитьПредставлениеБлокаНаСервере(МакетБлока) Экспорт 
	Возврат "{#Блок_" + МакетБлока.УникальныйИдентификатор() + "#}" + "<!--" + МакетБлока.Наименование + "-->";
КонецФункции

Функция ПолучитьПредставлениеИзображенияНаСервере(Изображение) Экспорт 
	Возврат "{#images_" + Изображение.УникальныйИдентификатор() + "#}";
КонецФункции

Функция ПолучитьПредставлениеФайлаНаСервере(Файл) Экспорт 
	Возврат "{#files_" + Файл.УникальныйИдентификатор() + "#}";
КонецФункции

Функция ПолучитьПредставлениеРесурсаНаСервере(Ресурс) Экспорт 
	Возврат "{#res_" + Ресурс.УникальныйИдентификатор() + "#}";
КонецФункции

Функция ПолучитьДанныеИзображения(Ссылка) Экспорт 
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Ссылка, Наименование, Файл");
	
	Адрес = ПоместитьВоВременноеХранилище(Реквизиты.Файл.Получить());
	Данные = Новый Структура;
	Данные.Вставить("Ссылка", Реквизиты.Ссылка);
	Данные.Вставить("ИмяФайла", Реквизиты.Наименование);
	Данные.Вставить("Адрес", Адрес);
	
	Возврат Данные;
КонецФункции

Функция ПолучитьДанныеФайла(Ссылка) Экспорт 
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Ссылка, Наименование, Файл, ТекстовыйФайл, Текст");
	
	Данные = Новый Структура;
	Адрес = ПоместитьВоВременноеХранилище(Реквизиты.Файл.Получить());
	
	Данные.Вставить("Ссылка", Реквизиты.Ссылка);
	Данные.Вставить("ИмяФайла", Реквизиты.Наименование);
	Данные.Вставить("ТекстовыйФайл", Реквизиты.ТекстовыйФайл);
	Данные.Вставить("Текст", ПоместитьВоВременноеХранилище(Реквизиты.Текст));
	Данные.Вставить("Адрес", Адрес);
	
	Возврат Данные;
КонецФункции

Функция ПолучитьДанныеСкрипта(Ссылка) Экспорт 
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Ссылка, Наименование, Текст, ТекстовыйФайл, Файл");
	Адрес = ПоместитьВоВременноеХранилище(Реквизиты.Файл.Получить());
	
	Данные = Новый Структура;
	Данные.Вставить("Ссылка", Реквизиты.Ссылка);
	Данные.Вставить("ИмяФайла", Реквизиты.Наименование);
	Данные.Вставить("Текст", ПоместитьВоВременноеХранилище(Реквизиты.Текст));
	Данные.Вставить("ТекстовыйФайл", Реквизиты.ТекстовыйФайл);
	Данные.Вставить("Адрес", Адрес);
	
	Возврат Данные;
КонецФункции

Функция ПолучитьДанныеСтиля(Ссылка) Экспорт 
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Ссылка, Наименование, Текст");
	
	Данные = Новый Структура;
	Данные.Вставить("Ссылка", Реквизиты.Ссылка);
	Данные.Вставить("ИмяФайла", Реквизиты.Наименование);
	Данные.Вставить("Текст", ПоместитьВоВременноеХранилище(Реквизиты.Текст));
	
	Возврат Данные;
КонецФункции




Функция ПолучитьРасширения_ВсеКартинки() Экспорт
	Результат = Новый массив;
	Результат.Добавить(".bmp");
	Результат.Добавить(".wmf");
	Результат.Добавить(".dib");
	Результат.Добавить(".rle");
	Результат.Добавить(".jpg");
	Результат.Добавить(".jpeg");
	Результат.Добавить(".tif");
	Результат.Добавить(".gif");
	Результат.Добавить(".png");
	Результат.Добавить(".ico");
	Результат.Добавить(".emf");
	Результат.Добавить(".svg");
	
	Возврат Результат;
КонецФункции

Функция ПолучитьРасширения_стили() Экспорт
	Результат = Новый массив;
	Результат.Добавить(".css");
	
	Возврат Результат;
КонецФункции

Функция ПолучитьРасширения_Скрипты() Экспорт
	Результат = Новый массив;
	Результат.Добавить(".js");
	
	Возврат Результат;
КонецФункции

Функция ОпределитьРесурсПоРасширению(Расширение) Экспорт 
	Результат = ПредопределенноеЗначение("Перечисление.Web1C_ВидыРесурса.Файл");
	
	Изображения = ПолучитьРасширения_ВсеКартинки();
	Стили = ПолучитьРасширения_стили();
	Скрипты = ПолучитьРасширения_Скрипты();
	
	Если Изображения.Найти(Расширение) <> Неопределено Тогда
		Результат = ПредопределенноеЗначение("Перечисление.Web1C_ВидыРесурса.Изображение");
	ИначеЕсли Стили.Найти(Расширение) <> Неопределено Тогда
		Результат = ПредопределенноеЗначение("Перечисление.Web1C_ВидыРесурса.Стиль");
	ИначеЕсли Скрипты.Найти(Расширение) <> Неопределено Тогда
		Результат = ПредопределенноеЗначение("Перечисление.Web1C_ВидыРесурса.Скрипт");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
