
&НаКлиенте
Процедура ПосмотретьСтраницу(Команда)
	#Если Клиент И Не ВебКлиент Тогда
	ТекстСтраницы = Web1C_ФормированиеОтветов.ПолучитьТекстСтраницыДляПроверки(Объект.Ссылка);
	
	ТД = Новый ТекстовыйДокумент;
	ТД.УстановитьТекст(ТекстСтраницы);
	ИмяВремФайла = ПолучитьИмяВременногоФайла("html");
	ТД.Записать(ИмяВремФайла, КодировкаТекста.UTF8);
	
	ЗапуститьПриложение(ИмяВремФайла);
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура Изображение(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВыбораИзображения", ЭтотОбъект);
	П = Новый Структура;
	П.Вставить("Отбор", Новый Структура("ВидРесурса", ПредопределенноеЗначение("Перечисление.Web1C_ВидыРесурса.Изображение")));
	ОткрытьФорму("Справочник.Ресурсы.ФормаВыбора", П, ЭтаФорма, , , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Функция ПослеВыбораИзображения(РезультатВыбора, ДополнительныеПараметры) экспорт
	Если РезультатВыбора <> Неопределено Тогда
		Если РежимВебКлиента Тогда
			Элементы.Шаблон.ВыделенныйТекст = Web1C_УправлениеКонтентом.ПолучитьПредставлениеРесурсаНаСервере(РезультатВыбора);
		Иначе
			Web1C_РедакторКлиент.УстановитьТекстМонако(Монако(), Web1C_УправлениеКонтентом.ПолучитьПредставлениеРесурсаНаСервере(РезультатВыбора));
		КонецЕсли;
		
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПутьВебИзображения(Изображение)
	Возврат Изображение.ПутьВеб;
КонецФункции

&НаКлиенте
Процедура ВставитьБлок(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВыбораМакета", ЭтотОбъект);
	ОткрытьФорму("Справочник.Web1C_Компоненты.ФормаВыбора", Новый Структура, ЭтотОбъект, , , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораМакета(РезультатВыбора, ДопПараметры) Экспорт
	Если РезультатВыбора <> Неопределено Тогда
		ТекстБлока = Web1C_УправлениеКонтентом.ПолучитьПредставлениеБлокаНаСервере(РезультатВыбора);
		
		Если РежимВебКлиента Тогда
			Элементы.Шаблон.ВыделенныйТекст = ТекстБлока;
		Иначе
			Web1C_РедакторКлиент.УстановитьТекстМонако(Монако(), ТекстБлока);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПеременную(Команда)
	СписокПеременных = Web1C_ФормированиеОтветов.ПолучитьСписокПеременных();
	
	ОО = Новый ОписаниеОповещения("ПослеВыбораПеременной", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОО, СписокПеременных, Элементы.ВставитьПеременную); 
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПеременной(ВыбранныйЭлемент, ДопПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Если РежимВебКлиента Тогда
			Элементы.Шаблон.ВыделенныйТекст = ВыбранныйЭлемент.Значение;
		Иначе
			Web1C_РедакторКлиент.УстановитьТекстМонако(Монако(), ВыбранныйЭлемент.Значение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСсылку(Команда)
	СписокПеременных = Web1C_ФормированиеОтветов.ПолучитьСписокСсылок();
	
	ОО = Новый ОписаниеОповещения("ПослеВыбораПеременной", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОО, СписокПеременных, Элементы.ВставитьСсылку); 
КонецПроцедуры

&НаКлиенте
Процедура ВставитьФайл(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтотОбъект);
	П = Новый Структура;
	//П.Вставить("Отбор", Новый Структура("ВидРесурса", ПредопределенноеЗначение("Перечисление.ВидыРесурса.Файл")));
	ОткрытьФорму("Справочник.Ресурсы.ФормаВыбора", П, ЭтаФорма, , , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Функция ПослеВыбораФайла(РезультатВыбора, ДополнительныеПараметры) экспорт
	Если РезультатВыбора <> Неопределено Тогда
		Если РежимВебКлиента Тогда
			Элементы.Шаблон.ВыделенныйТекст = Web1C_УправлениеКонтентом.ПолучитьПредставлениеРесурсаНаСервере(РезультатВыбора);
		Иначе
			Web1C_РедакторКлиент.УстановитьТекстМонако(Монако(), Web1C_УправлениеКонтентом.ПолучитьПредставлениеРесурсаНаСервере(РезультатВыбора));
		КонецЕсли;
		
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьМакетБлокаНаСервере(УИД)
	Возврат Справочники.Web1C_Компоненты.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД));
КонецФункции

&НаКлиенте
Процедура ОткрытьМакетБлока(Команда)
	Если РежимВебКлиента Тогда
		Текст = Элементы.Шаблон.ВыделенныйТекст;
	Иначе
		Текст = Web1C_РедакторКлиент.ПолучитьВыделенныйТекстМонако(Монако());
	КонецЕсли;
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	Начало = СтрНайти(Текст, "{", НаправлениеПоиска.СНачала);
	Окончание = СтрНайти(Текст, "}", НаправлениеПоиска.СНачала);
	Текст = Сред(Текст, Начало, (Окончание - Начало));
	
	УидМакета = Текст;
	УидМакета = СтрЗаменить(УидМакета, "{#Блок_", "");
	УидМакета = СтрЗаменить(УидМакета, "#}", "");
	Макет = ПолучитьМакетБлокаНаСервере(УидМакета);
	Если Не Макет.Пустая() Тогда
		ПоказатьЗначение(, Макет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция Монако()
	Возврат Элементы.ТекстШаблона.Документ.defaultView;
КонецФункции

&НаКлиенте
Функция Editor()
	Возврат Элементы.ТекстШаблона.Документ.monaco.editor;
КонецФункции

&НаКлиенте
Процедура ОбработкаИнициализации(Результат, ДопПараметры) Экспорт
	ТекстШаблона = ДопПараметры.КаталогИсходников + "index.html";
	
	РедакторРаспакован = истина;
КонецПроцедуры

&НаКлиенте
Процедура ОшибкаИнициализацииРедактора(ТекстОшибки)
	ПоказатьПредупреждение(, ТекстОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ШаблонДокументСформирован(Элемент)
	Если РедакторРаспакован  Тогда
		Попытка
			Web1C_РедакторКлиент.ИнициализироватьРедакторMonaco(Монако(), "html");
			Web1C_РедакторКлиент.ЗагрузитьТекстВРедактор(Монако(), Объект.Шаблон);
		Исключение
			ОшибкаИнициализацииРедактора("Не удалось инициализировать редактор кода - " + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресМакета = ПоместитьВоВременноеХранилище(ПолучитьОбщийМакет("monaco"));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Состояние("Инициализация...");
	#Если ВебКлиент Тогда
		РежимВебКлиента = Истина;
	#иначе
		РежимВебКлиента = Ложь;
	#КонецЕсли

	Если РежимВебКлиента Тогда
		Элементы.ГруппаРедактированияТекста.ТекущаяСтраница = Элементы.ГруппаРедакторОбычный;
	Иначе
		Элементы.ГруппаРедактированияТекста.ТекущаяСтраница = Элементы.ГруппаРедакторМонако;
		Web1C_РедакторКлиент.ИзвлечьИсходники(АдресМакета, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекстШаблонаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Не ЗавершениеРаботы Тогда
		Если Не РежимВебКлиента Тогда
			Если Объект.Шаблон <> Web1C_РедакторКлиент.ПолучитьТекстМонако(Монако()) Тогда
				Объект.Шаблон = Web1C_РедакторКлиент.ПолучитьТекстМонако(Монако());
				ЭтаФорма.Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не РежимВебКлиента Тогда
		ТекстМонако = Web1C_РедакторКлиент.ПолучитьТекстМонако(Монако());
		Если Объект.Шаблон <> ТекстМонако Тогда
			Объект.Шаблон = ТекстМонако;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТекст(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВводаТекста", ЭтотОбъект);
	ПоказатьВводСтроки(ОО, "", , , Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаТекста(Текст, ДопПараметры) Экспорт 
	Если Текст <> Неопределено Тогда
		Web1C_РедакторКлиент.УстановитьТекстМонако(Монако(), Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТекст(Команда)
	Текст = Web1C_РедакторКлиент.ПолучитьВыделенныйТекстМонако();
	ОчиститьСообщения();
	Сообщить(Текст);
КонецПроцедуры

&НаКлиенте
Процедура EditorСтандартныеКоманды(Команда)
	Соответствие = New Соответствие;
	Соответствие.Вставить("ClipboardCut", "editor.action.clipboardCutAction");
	Соответствие.Вставить("ClipboardCopy", "editor.action.clipboardCopyAction");
	Соответствие.Вставить("ClipboardPaste", "editor.action.clipboardPasteAction");
	Соответствие.Вставить("EditFind", "actions.find");
	Соответствие.Вставить("EditFindNext", "editor.action.nextMatchFindAction");
	Соответствие.Вставить("EditFindPrevious", "editor.action.previousMatchFindAction");
	Соответствие.Вставить("EditUndo", "undo");
	Соответствие.Вставить("EditRedo", "redo");
	Соответствие.Вставить("EditReplace", "editor.action.startFindReplaceAction");
	ИмяКоманды = СтрЗаменить(Команда.Имя, "Editor", "");
	
	Элементы.ТекстШаблона.Документ.defaultView.editor.trigger("", Соответствие[ИмяКоманды]);
КонецПроцедуры

&НаСервере
Процедура ИмпортСтилейНаСервере(Страница)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраницыСтили.Стиль КАК Стиль
	|ИЗ
	|	Справочник.Web1C_Страницы.Стили КАК СтраницыСтили
	|ГДЕ
	|	СтраницыСтили.Ссылка = &Страница";
	Запрос.УстановитьПараметр("Страница", Страница);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Объект.Стили.НайтиСтроки(Новый Структура("Стиль", Выборка.Стиль)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Стили.Добавить();
			НоваяСтрока.Стиль = Выборка.Стиль;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура КомандаИмпортСтилей(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВыбораСтраницыИмпортСтилей", ЭтотОбъект);
	ОткрытьФорму("Справочник.Web1C_Страницы.ФормаВыбора", , , , , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ПослеВыбораСтраницыИмпортСтилей(Результат, ДопПараметры) Экспорт 
	Если Результат <> Неопределено Тогда
		ИмпортСтилейНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИмпортСкриптовНаСервере(Страница)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраницыСкрипты.Скрипт КАК Скрипт,
	|	СтраницыСкрипты.ЗагрузкаВТеле КАК ЗагрузкаВТеле
	|ИЗ
	|	Справочник.Web1C_Страницы.Скрипты КАК СтраницыСкрипты
	|ГДЕ
	|	СтраницыСкрипты.Ссылка = &Страница";
	Запрос.УстановитьПараметр("Страница", Страница);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Объект.Скрипты.НайтиСтроки(Новый Структура("Скрипт", Выборка.Скрипт)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Скрипты.Добавить();
			НоваяСтрока.Скрипт = Выборка.Скрипт;
			НоваяСтрока.ЗагрузкаВТеле = Выборка.ЗагрузкаВТеле;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаИмпортСкриптов(Команда)
	ОО = Новый ОписаниеОповещения("ПослеВыбораСтраницыИмпортСкриптов", ЭтотОбъект);
	ОткрытьФорму("Справочник.Web1C_Страницы.ФормаВыбора", , , , , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ПослеВыбораСтраницыИмпортСкриптов(Результат, ДопПараметры) Экспорт 
	Если Результат <> Неопределено Тогда
		ИмпортСкриптовНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры