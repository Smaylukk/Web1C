
Функция ПолучитьТекстМакета(ВходящиеПараметры) Экспорт 
	Результат = "";
	
	Для каждого ТекСтрокаСостава Из Состав Цикл
		Если ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.Запрос") Тогда
			Результат = Результат + ПолучитьТекстПоЗапросу(ТекСтрокаСостава, ВходящиеПараметры) + Символы.ПС;
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.ПростойТекст") Тогда
			Результат = Результат + ТекСтрокаСостава.Текст + Символы.ПС;
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.Значение") Тогда
			
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.Объект") Тогда
			Результат = Результат + Строка(ТекСтрокаСостава.ИсточникДанных) + Символы.ПС;
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.Список") Тогда
			
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.ЗапросСОбработкойРезультата") Тогда
			Результат = Результат + ПолучитьТекстПоЗапросуСОбработкой(ТекСтрокаСостава, ВходящиеПараметры) + Символы.ПС;
		ИначеЕсли ТекСтрокаСостава.ВидИсточникаДанных = ПредопределенноеЗначение("Перечисление.Web1C_ВидыИсточниковДанных.ПроизвольныйКод") Тогда
			Результат = Результат + ПолучитьТекстПроизволныйКод(ТекСтрокаСостава, ВходящиеПараметры) + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьТекстПоЗапросу(СтрокаСостава, ВходящиеПараметры)
	Результат = "";
	Эталон = СтрокаСостава.Текст;
	
	ИсточникОб = СтрокаСостава.ИсточникДанных.получитьОбъект();
	Если Ложь Тогда
		ИсточникОб = Справочники.Web1C_ИсточникДанных.СоздатьЭлемент()
	КонецЕсли;
	
	Поля = ИсточникОб.Поля.Выгрузить();
	
	Выборка = ПолучитьВыборкуЗапросаИсточника(СтрокаСостава, ВходящиеПараметры);
	Пока Выборка.Следующий() Цикл
		ТекущаяСтрока = Эталон;
		Для каждого Поле Из поля Цикл
			ТекущаяСтрока = СтрЗаменить(ТекущаяСтрока, "{#Поле_" + Поле.ИмяПоля + "#}", ?(ЗначениеЗаполнено(Поле.Формат), Формат(Выборка[Поле.ИмяПоля], Поле.Формат), Выборка[Поле.ИмяПоля]));
		КонецЦикла;
		Результат = Результат + ТекущаяСтрока + Символы.ПС;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьТекстПоЗапросуСОбработкой(СтрокаСостава, ВходящиеПараметры)
	Результат = "";
	Эталон = СтрокаСостава.Текст;
	
	ИсточникОб = СтрокаСостава.ИсточникДанных.получитьОбъект();
	Если Ложь Тогда
		ИсточникОб = Справочники.Web1C_ИсточникДанных.СоздатьЭлемент()
	КонецЕсли;
	
	Выборка = ПолучитьВыборкуЗапросаИсточника(СтрокаСостава, ВходящиеПараметры);
	НомерСтроки = 0;
	
	Поля = ИсточникОб.Поля.Выгрузить();
	
	СобытияЖурналаРегистрации = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		ВыборкаДанных = Новый Структура;
		Для каждого Поле Из поля Цикл
			ВыборкаДанных.Вставить(Поле.ИмяПоля, Выборка[Поле.ИмяПоля]);
		КонецЦикла;
		КодВыполнения = Эталон;
		ВыходнаяСтрока = "";
		НомерСтроки = НомерСтроки + 1;
		Попытка
			Выполнить КодВыполнения;
		Исключение
			текстОшибки = ОписаниеОшибки() + " - " + КодВыполнения;
			Сообщить("Во время выполнения произошла ошибка - " + текстОшибки);
			СобытияЖурналаРегистрации.Добавить(Новый Структура("ИмяСобытия, ПредставлениеУровня, Комментарий, ДатаСобытия", "Компоненты.ОшибкаВыполнения", "Ошибка", текстОшибки, ТекущаяДата()));
		КонецПопытки;
		Результат = Результат + ВыходнаяСтрока + Символы.ПС;
	КонецЦикла; 
	
	ЖурналРегистрации.ЗаписатьСобытияВЖурналРегистрации(СобытияЖурналаРегистрации);
	
	Возврат Результат;
КонецФункции

Функция ПолучитьВыборкуЗапросаИсточника(СтрокаСостава, ВходящиеПараметры)
	Результат = Неопределено;
	
	ИсточникОб = СтрокаСостава.ИсточникДанных.получитьОбъект();
	Если Ложь Тогда
		ИсточникОб = Справочники.Web1C_ИсточникДанных.СоздатьЭлемент()
	КонецЕсли;
	
	Если Не ПустаяСтрока(СтрокаСостава.Параметры) Тогда
		ПараметрыИсточника = ЗначениеИзСтрокиВнутр(СтрокаСостава.Параметры).ПараметрыИсточника;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ИсточникОб.ТекстЗапроса;
	
	Для каждого Параметр Из ИсточникОб.Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Параметр, Параметр.Значение);
	КонецЦикла;
	
	Если ПараметрыИсточника <> Неопределено Тогда
		Для каждого Параметр Из ПараметрыИсточника Цикл
			Если Параметр.ИсточникЗначения = 0 Тогда
				Запрос.УстановитьПараметр(Параметр.Параметр, Параметр.Значение);
			Иначе
				Запрос.УстановитьПараметр(Параметр.Параметр, ВходящиеПараметры[Параметр.Значение] );
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	//Общие праметры
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	//Для каждого Параметр Из ВходящиеПараметры Цикл
	//	Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	//КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	Возврат Результат;
КонецФункции

Функция ПолучитьТекстПроизволныйКод(СтрокаСостава, ВходящиеПараметры)
	Результат = "";
	Эталон = СтрокаСостава.Текст;
	
	НомерСтроки = 0;
	КодВыполнения = Эталон;
	ВыходнаяСтрока = "";
	Попытка
		Выполнить КодВыполнения;
	Исключение
		СобытияЖурналаРегистрации = Новый СписокЗначений;
		СобытияЖурналаРегистрации.Добавить(Новый Структура("ИмяСобытия, ПредставлениеУровня, Комментарий, ДатаСобытия", "Компоненты.ОшибкаВыполнения", "Ошибка", ОписаниеОшибки() + " - " + КодВыполнения, ТекущаяДата()));
		ЖурналРегистрации.ЗаписатьСобытияВЖурналРегистрации(СобытияЖурналаРегистрации);
		
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Результат = Результат + ВыходнаяСтрока + Символы.ПС; 
	
	Возврат Результат;
КонецФункции
