
&НаКлиенте
Процедура ПоляФорматНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.Поля.ТекущаяСтрока;
	
	ОО = Новый ОписаниеОповещения("ПослеРедактированияФорматнойСтроки", ЭтотОбъект, ТекСтрока);
	КФС = Новый КонструкторФорматнойСтроки(Элемент.ТекстРедактирования);
	КФС.Показать(ОО);
КонецПроцедуры

&НаКлиенте
Процедура ПослеРедактированияФорматнойСтроки(Результат, ДопПараметры) Экспорт 
	Если Результат <> Неопределено Тогда
		СтрокаПоля = Объект.поля.НайтиПоИдентификатору(ДопПараметры);
		Если СтрокаПоля <> Неопределено Тогда
			СтрокаПоля.Формат = Результат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьПараметры(Команда)
	Объект.Параметры.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	КЗ = Новый КонструкторЗапроса(Объект.ТекстЗапроса);
	ОО = Новый ОписаниеОповещения("ПослеЗакрытияКонструктораЗапроса", ЭтотОбъект);
	
	Кз.Показать(ОО);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияКонструктораЗапроса(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Объект.ТекстЗапроса = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзЗапроса(Команда)
	ЗаполнитьИзЗапросаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзЗапросаНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = Объект.ТекстЗапроса;
	
	Попытка
		ПараметрыЗапр = Запрос.НайтиПараметры();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Для каждого ПараметрЗапроса Из ПараметрыЗапр Цикл
		ИмяПараметра =  ПараметрЗапроса.Имя;
		СтрокаПараметров = Объект.Параметры.НайтиСтроки(Новый Структура("Параметр", ИмяПараметра));
		Если СтрокаПараметров.Количество() = 0 Тогда
			СтрокаПараметров = Объект.Параметры.Добавить();
			СтрокаПараметров.Параметр = ИмяПараметра;
		КонецЕсли;		
		СтрокаПараметров.Значение = ПараметрЗапроса.ТипЗначения.ПривестиЗначение(СтрокаПараметров.Значение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоля(Команда)
	Объект.Поля.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоля(Команда)
	ЗаполнитьПоляНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляНаСервере()
	Объект.Поля.Очистить();
	
	Попытка
		//из-за временных таблиц переделал схему с построителем
		//теперь запрос формируете, а построитель выводит
		Запрос = Новый Запрос;
		
		//определяем источник запроса
		ТекстЗапроса = Объект.ТекстЗапроса;
		
		Запрос.Текст = ТекстЗапроса;
		
		Если ЗначениеЗаполнено(Запрос.Текст) Тогда				
			Для Каждого СтрокаПараметров Из Объект.Параметры Цикл		
				Запрос.Параметры.Вставить(СтрокаПараметров.Параметр, СтрокаПараметров.Значение);					
			КонецЦикла;				
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		
		Для каждого ТекКолонка Из Результат.Колонки Цикл
			НоваяСтрока = Объект.Поля.Добавить();
			НоваяСтрока.ИмяПоля = ТекКолонка.Имя;
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПредпросмотрНаСервере()
	Результат = Неопределено;
	РезультатЗапроса = Справочники.Web1C_ИсточникДанных.ВыполнитьИсточник(Объект.Ссылка);
	
	ПостроительПроверка = Новый ПостроительОтчета();
	ПостроительПроверка.ИсточникДанных = Новый ОписаниеИсточникаДанных(РезультатЗапроса);
	
	//настройка ТабДока
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	
	//настройка реквизитов построителя
	ПостроительПроверка.ОбрабатыватьПрерываниеПользователя = Истина;
	ПостроительПроверка.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительПроверка.РазмещениеИзмеренийВКолонках = ТипРазмещенияИзмерений.Вместе;
	ПостроительПроверка.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительПроверка.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Вместе;
	ПостроительПроверка.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Вместе;
	ПостроительПроверка.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительПроверка.ЗаполнитьНастройки();
	ПостроительПроверка.Вывести(ТабДок);
	
	Результат = ПоместитьВоВременноеХранилище(ТабДок);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Предпросмотр(Команда)
	Адрес = ПредпросмотрНаСервере();
	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		ТабДок = ПолучитьИзВременногоХранилища(Адрес);
		//ТабДок = Новый ТабличныйДокумент;
		ТабДок.Показать();
	КонецЕсли;
КонецПроцедуры
